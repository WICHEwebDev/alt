server {
  listen ${NGINX_LISTEN:-8080} default_server;

  client_body_timeout 10s;
  client_header_timeout 10s;
  client_max_body_size 2048m;

  fastcgi_keep_conn on;

  root /app/${WEBROOT:-};
  add_header              X-AMAZEEIO 'backend' always;
  index  index.php;

### Nginx configuration for Drupal. This configuration makes use of
### drush (http:///drupal.org/project/drush) for site maintenance
### and like tasks:
###
### 1. Run the cronjobs.
### 2. Run the DB and code updates: drush up or drush upc followed by
###    drush updb to run any DB updates required by the code upgrades
###    that were performed.
### 3. Disabling of xmlrpc.xml, install.php (needed only for
###    installing the site) and update.php: all updates are now
###    handled through drush.

## To avoid the ugly rewrite we use Lua to escape the URI.
set_by_lua_block $no_slash_escaped_uri {return string.gsub(ngx.var.no_slash_uri, ngx.var.request_filename, ngx.escape_uri(ngx.var.request_filename))}

## If ssl terminator had ssl, we're passing that on
if ($http_x_forwarded_proto = 'https') {
  set $fastcgi_https "on";
}

## rewriting /index.php to / because after https://www.drupal.org/node/2599326
## autocomplete URLs are forced to go to index.php
rewrite ^/index.php / last;

## The 'default' location.
location / {

    ## Disallow access to any dot files
    location ~ /\. {
         deny all;
         access_log off;
         log_not_found off;
    }

    ## Replicate the Apache <FilesMatch> directive of Drupal standard
    ## .htaccess. Disable access to any code files. Return a 404 to curtail
    ## information disclosure. Hide also the text files.
    location ~* ^(?:.+\.(?:htaccess|make|txt|yml|md||engine|inc|info|install|module|profile|po|pot|sh|.*sql|test|theme|tpl(?:\.php)?|xtmpl)|code-style\.pl|/Entries.*|/Repository|/Root|/Tag|/Template)$ {
         deny all;
         access_log off;
         log_not_found off;
    }

    ## Expiring per default for four weeks and one second, Drupal will overwrite that if necessary
    expires 2628001s;

    ## First we try the URI and relay to the /index.php?q=$escaped_uri&$args if not found.
    try_files $uri @drupal;
}

########### Security measures ##########

## Restrict access to the strictly necessary PHP files. Reducing the
## scope for exploits. Handling of PHP code and the Drupal event loop.
location @drupal {
    ## Include the FastCGI config.
    include /etc/nginx/conf.d/drupal/location_drupal_prepend*.conf;

        include        /etc/nginx/fastcgi.conf;


    # Drupal 6 needs the uri as a query string together with the args.
    fastcgi_param QUERY_STRING q=$no_slash_escaped_uri&$args;

    fastcgi_param  SCRIPT_NAME        /index.php;
    fastcgi_param  SCRIPT_FILENAME    $realpath_root/index.php;
    fastcgi_pass   ${NGINX_FASTCGI_PASS:-php}:9000;

    ## @TODO Phase2: Learn more about MicroCache with Auth, as we have
    ## varnish most probably not necessary
    ## FCGI microcache for authenticated users also.
    #include apps/drupal/microcache_fcgi_auth.conf;

    ## @TODO need to test that more indept.
    ## Filefield Upload progress
    ## http://drupal.org/project/filefield_nginx_progress support
    ## through the NginxUploadProgress modules.
    ##track_uploads uploads 60s;
}

## Trying to access private files directly returns a 404.
location /sites/default/files/private/ {
    internal;
}

## Disallow access to patches directory.
location ^~ /patches {
     deny all;
     access_log off;
     log_not_found off;
}

## Disallow access to backup directory.
location ^~ /backup {
     deny all;
     access_log off;
     log_not_found off;
}

## Disallow access to vagrant directory.
location ^~ /vagrant {
     deny all;
     access_log off;
     log_not_found off;
}

## Disable access logs for robots.txt.
location = /robots.txt {
    access_log off;
    ## Add support for the robotstxt module
    ## http://drupal.org/project/robotstxt.
    try_files $uri @drupal;
}

location = /humans.txt {
    access_log off;
    ## Add support for the humanstxt module
    ## http://drupal.org/project/humanstxt.
    try_files $uri @drupal;
}

## Support for favicon. Return an 1x1 transparent GIF if it doesn't
## exist.
location = /favicon.ico {
    expires 30d;
    try_files /favicon.ico @empty;
}

## Return an in memory 1x1 transparent GIF.
location @empty {
    expires 30d;
    empty_gif;
}

# Any other attempt to access PHP files does not have access.
location ~* ^.+\.php$ {
    deny all;
}

### Directives for installing drupal. This is for drupal 6 and 7.
location = /install.php {

    fastcgi_pass unix:/var/run/php-fpm-drupal.sock;
}

}
